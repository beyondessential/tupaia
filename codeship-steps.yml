- name: Fetch environment variables
  service: lastpass
  command: './packages/devops/scripts/ci/setupEnvironmentVariables.sh'

- type: parallel
  name: Validate and test
  exclude: -e2e$
  steps:
    - type: parallel
      name: Validate
      service: validation
      steps:
        - name: Validate branch name
          command: './packages/devops/scripts/ci/validateBranchName.sh'
        - name: Validate tests
          command: './packages/devops/scripts/ci/validateTests.sh'
    - type: parallel
      name: Test
      service: testing
      steps:
        - name: Test admin-panel-server
          command: './packages/devops/scripts/ci/testBackend.sh admin-panel-server'
        - name: Test lesmis-server
          command: './packages/devops/scripts/ci/testBackend.sh lesmis-server'
        - name: Test meditrak-server
          command: './packages/devops/scripts/ci/testBackend.sh meditrak-server'
        - name: Test web-config-server
          command: './packages/devops/scripts/ci/testBackend.sh web-config-server'
        - name: Test psss-server
          command: './packages/devops/scripts/ci/testBackend.sh psss-server'
        - name: Test report-server
          command: './packages/devops/scripts/ci/testBackend.sh report-server'
        - name: Test entity-server
          command: './packages/devops/scripts/ci/testBackend.sh entity-server'
        - name: Test database
          command: './packages/devops/scripts/ci/testBackend.sh database'
        - name: Test data-api
          command: './packages/devops/scripts/ci/testBackend.sh data-api'
        - name: Test auth
          command: './packages/devops/scripts/ci/testBackend.sh auth'
        - name: Test indicators
          command: './packages/devops/scripts/ci/testBackend.sh indicators'
        - name: Test internal-dependencies
          command: './packages/devops/scripts/ci/testInternalDependencies.sh'
        - name: Test web-frontend
          command: './packages/devops/scripts/ci/testFrontend.sh web-frontend'

- name: Check for deployment
  service: deployment
  command: './packages/devops/scripts/ci/checkDeploymentExists.sh'

- type: serial
  name: Set up ssh key
  service: deployment
  exclude: -e2e$
  steps:
    - name: Reinstate SSH Private Key File
      # Need to use 'sed' here to remove open/close quotes, see: https://github.com/docker/compose/issues/2854
      # Note: this issue is fixed in more recent versions of docker-compose (1.26+) but codeship still uses an older version
      command: /bin/bash -c "echo -e $PRIVATE_SSH_KEY | sed -e 's/^"//' -e 's/"$//' >> /root/.ssh/id_rsa"
    - name: chmod id_rsa
      command: chmod 600 /root/.ssh/id_rsa

- type: serial
  name: Build front ends
  service: builder
  exclude: -e2e$
  steps:
    # front end builds are split into batches as they consume a lot of memory
    - type: parallel
      name: Build batch 1
      steps:
        - name: Build admin-panel
          command: './packages/devops/scripts/ci/buildPackage.sh admin-panel'
        - name: Build lesmis
          command: './packages/devops/scripts/ci/buildPackage.sh lesmis'
    - type: parallel
      name: Build batch 2
      steps:
      - name: Build psss
        command: './packages/devops/scripts/ci/buildPackage.sh psss'
      - name: Build web-frontend
        command: './packages/devops/scripts/ci/buildPackage.sh web-frontend'

- type: parallel
  name: Build back ends
  service: builder
  exclude: -e2e$
  steps:
    - name: Build admin-panel-server
      command: './packages/devops/scripts/ci/buildPackage.sh admin-panel-server'
    - name: Build entity-server
      command: './packages/devops/scripts/ci/buildPackage.sh entity-server'
    - name: Build lesmis-server
      command: './packages/devops/scripts/ci/buildPackage.sh lesmis-server'
    - name: Build meditrak-server
      command: './packages/devops/scripts/ci/buildPackage.sh meditrak-server'
    - name: Build psss-server
      command: './packages/devops/scripts/ci/buildPackage.sh psss-server'
    - name: Build report-server
      command: './packages/devops/scripts/ci/buildPackage.sh report-server'
    - name: Build web-config-server
      command: './packages/devops/scripts/ci/buildPackage.sh web-config-server'

- name: Push builds
  service: deployment
  exclude: -e2e$
  command: './packages/devops/scripts/ci/pushBuilds.sh'

- type: serial
  name: Deploy backends
  exclude: -e2e$
  service: deployment
  steps:
    - name: Deploy admin-panel-server
      command: './packages/devops/scripts/ci/deployBackend.sh admin-panel-server'
    - name: Deploy entity-server
      command: './packages/devops/scripts/ci/deployBackend.sh entity-server'
    - name: Deploy lesmis-server
      command: './packages/devops/scripts/ci/deployBackend.sh lesmis-server'
    - name: Deploy meditrak-server
      command: './packages/devops/scripts/ci/deployBackend.sh meditrak-server'
    - name: Deploy psss-server
      command: './packages/devops/scripts/ci/deployBackend.sh psss-server'
    - name: Deploy report-server
      command: './packages/devops/scripts/ci/deployBackend.sh report-server'
    - name: Deploy web-config-server
      command: './packages/devops/scripts/ci/deployBackend.sh web-config-server'

# run migrations immediately after backend deployment has finished so there is minimal time for code/db mismatch
- name: Run db migrations
  service: deployment
  exclude: -e2e$
  command: './packages/devops/scripts/ci/runMigrations.sh'

- type: parallel
  name: E2E test
  service: e2e
  tag: -e2e$
  steps:
    - name: E2E test web-frontend
      command: './packages/devops/scripts/ci/testE2e.sh web-frontend'
