/*
 * Tupaia
 * Copyright (c) 2017 - 2020 Beyond Essential Systems Pty Ltd
 *
 */

/* 
 * This file was generated by a tool.
 * Rerun generate:schemas to regenerate this file.
 */
export const PeriodTypeSchema = {
	"description": "Tupaia\nCopyright (c) 2017 - 2020 Beyond Essential Systems Pty Ltd",
	"enum": [
		"day",
		"month",
		"quarter",
		"week",
		"year"
	],
	"type": "string"
} 

export const DateOffsetSchema = {
	"properties": {
		"unit": {
			"description": "Tupaia\nCopyright (c) 2017 - 2020 Beyond Essential Systems Pty Ltd",
			"enum": [
				"day",
				"month",
				"quarter",
				"week",
				"year"
			],
			"type": "string"
		},
		"offset": {
			"type": "number"
		},
		"modifier": {
			"enum": [
				"end_of",
				"start_of"
			],
			"type": "string"
		},
		"modifierUnit": {
			"description": "Tupaia\nCopyright (c) 2017 - 2020 Beyond Essential Systems Pty Ltd",
			"enum": [
				"day",
				"month",
				"quarter",
				"week",
				"year"
			],
			"type": "string"
		},
		"from": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"unit"
	]
} 

export const DateSpecsSchema = {
	"anyOf": [
		{
			"type": "object",
			"properties": {
				"unit": {
					"description": "Tupaia\nCopyright (c) 2017 - 2020 Beyond Essential Systems Pty Ltd",
					"enum": [
						"day",
						"month",
						"quarter",
						"week",
						"year"
					],
					"type": "string"
				},
				"offset": {
					"type": "number"
				},
				"modifier": {
					"enum": [
						"end_of",
						"start_of"
					],
					"type": "string"
				},
				"modifierUnit": {
					"description": "Tupaia\nCopyright (c) 2017 - 2020 Beyond Essential Systems Pty Ltd",
					"enum": [
						"day",
						"month",
						"quarter",
						"week",
						"year"
					],
					"type": "string"
				},
				"from": {
					"type": "string"
				}
			},
			"required": [
				"unit"
			]
		},
		{
			"type": "string"
		}
	]
} 

export const AggregationObjectSchema = {
	"properties": {
		"type": {
			"type": "string"
		},
		"config": {
			"type": "object"
		}
	},
	"type": "object",
	"required": [
		"type"
	]
} 

export const AggregationSchema = {
	"anyOf": [
		{
			"type": "object",
			"properties": {
				"type": {
					"type": "string"
				},
				"config": {
					"type": "object"
				}
			},
			"required": [
				"type"
			]
		},
		{
			"type": "string"
		}
	]
} 

export const TransformSchema = {
	"type": [
		"string",
		"object"
	]
} 

export const ReportConfigSchema = {
	"properties": {
		"fetch": {
			"type": "object",
			"properties": {
				"dataElements": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"dataGroups": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"aggregations": {
					"type": "array",
					"items": {
						"anyOf": [
							{
								"type": "object",
								"properties": {
									"type": {
										"type": "string"
									},
									"config": {
										"type": "object"
									}
								},
								"required": [
									"type"
								]
							},
							{
								"type": "string"
							}
						]
					}
				},
				"startDate": {
					"anyOf": [
						{
							"type": "object",
							"properties": {
								"unit": {
									"description": "Tupaia\nCopyright (c) 2017 - 2020 Beyond Essential Systems Pty Ltd",
									"enum": [
										"day",
										"month",
										"quarter",
										"week",
										"year"
									],
									"type": "string"
								},
								"offset": {
									"type": "number"
								},
								"modifier": {
									"enum": [
										"end_of",
										"start_of"
									],
									"type": "string"
								},
								"modifierUnit": {
									"description": "Tupaia\nCopyright (c) 2017 - 2020 Beyond Essential Systems Pty Ltd",
									"enum": [
										"day",
										"month",
										"quarter",
										"week",
										"year"
									],
									"type": "string"
								},
								"from": {
									"type": "string"
								}
							},
							"required": [
								"unit"
							]
						},
						{
							"type": "string"
						}
					]
				},
				"endDate": {
					"anyOf": [
						{
							"type": "object",
							"properties": {
								"unit": {
									"description": "Tupaia\nCopyright (c) 2017 - 2020 Beyond Essential Systems Pty Ltd",
									"enum": [
										"day",
										"month",
										"quarter",
										"week",
										"year"
									],
									"type": "string"
								},
								"offset": {
									"type": "number"
								},
								"modifier": {
									"enum": [
										"end_of",
										"start_of"
									],
									"type": "string"
								},
								"modifierUnit": {
									"description": "Tupaia\nCopyright (c) 2017 - 2020 Beyond Essential Systems Pty Ltd",
									"enum": [
										"day",
										"month",
										"quarter",
										"week",
										"year"
									],
									"type": "string"
								},
								"from": {
									"type": "string"
								}
							},
							"required": [
								"unit"
							]
						},
						{
							"type": "string"
						}
					]
				},
				"organisationUnits": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"transform": {
			"type": "array",
			"items": {
				"type": [
					"string",
					"object"
				]
			}
		},
		"output": {
			"type": "object"
		}
	},
	"type": "object",
	"required": [
		"fetch",
		"transform"
	]
} 

export const AccessRequestSchema = {
	"properties": {
		"approved": {
			"type": "boolean"
		},
		"created_time": {
			"type": "string",
			"format": "date-time"
		},
		"entity_id": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"message": {
			"type": "string"
		},
		"note": {
			"type": "string"
		},
		"permission_group_id": {
			"type": "string"
		},
		"processed_by": {
			"type": "string"
		},
		"processed_date": {
			"type": "string",
			"format": "date-time"
		},
		"project_id": {
			"type": "string"
		},
		"user_id": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"id"
	]
} 

export const AdminPanelSessionSchema = {
	"properties": {
		"access_policy": {},
		"access_token": {
			"type": "string"
		},
		"access_token_expiry": {
			"type": "string"
		},
		"email": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"refresh_token": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"access_policy",
		"access_token",
		"access_token_expiry",
		"email",
		"id",
		"refresh_token"
	]
} 

export const AnalyticsSchema = {
	"properties": {
		"answer_entity_m_row$": {
			"type": "string"
		},
		"answer_m_row$": {
			"type": "string"
		},
		"data_element_code": {
			"type": "string"
		},
		"data_element_m_row$": {
			"type": "string"
		},
		"data_group_code": {
			"type": "string"
		},
		"date": {
			"type": "string",
			"format": "date-time"
		},
		"day_period": {
			"type": "string"
		},
		"entity_code": {
			"type": "string"
		},
		"entity_m_row$": {
			"type": "string"
		},
		"entity_name": {
			"type": "string"
		},
		"event_id": {
			"type": "string"
		},
		"month_period": {
			"type": "string"
		},
		"question_m_row$": {
			"type": "string"
		},
		"survey_m_row$": {
			"type": "string"
		},
		"survey_response_m_row$": {
			"type": "string"
		},
		"type": {
			"type": "string"
		},
		"value": {
			"type": "string"
		},
		"week_period": {
			"type": "string"
		},
		"year_period": {
			"type": "string"
		}
	},
	"type": "object"
} 

export const AncestorDescendantRelationSchema = {
	"properties": {
		"ancestor_id": {
			"type": "string"
		},
		"descendant_id": {
			"type": "string"
		},
		"entity_hierarchy_id": {
			"type": "string"
		},
		"generational_distance": {
			"type": "number"
		},
		"id": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"ancestor_id",
		"descendant_id",
		"entity_hierarchy_id",
		"generational_distance",
		"id"
	]
} 

export const AnswerSchema = {
	"properties": {
		"id": {
			"type": "string"
		},
		"m_row$": {
			"type": "string"
		},
		"question_id": {
			"type": "string"
		},
		"survey_response_id": {
			"type": "string"
		},
		"text": {
			"type": "string"
		},
		"type": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"id",
		"question_id",
		"survey_response_id",
		"type"
	]
} 

export const ApiClientSchema = {
	"properties": {
		"id": {
			"type": "string"
		},
		"secret_key_hash": {
			"type": "string"
		},
		"user_account_id": {
			"type": "string"
		},
		"username": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"id",
		"secret_key_hash",
		"username"
	]
} 

export const ApiRequestLogSchema = {
	"properties": {
		"api": {
			"type": "string"
		},
		"endpoint": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"metadata": {},
		"method": {
			"type": "string"
		},
		"query": {},
		"refresh_token": {
			"type": "string"
		},
		"request_time": {
			"type": "string",
			"format": "date-time"
		},
		"user_id": {
			"type": "string"
		},
		"version": {
			"type": "number"
		}
	},
	"type": "object",
	"required": [
		"api",
		"endpoint",
		"id",
		"version"
	]
} 

export const ClinicSchema = {
	"properties": {
		"category_code": {
			"type": "string"
		},
		"code": {
			"type": "string"
		},
		"country_id": {
			"type": "string"
		},
		"geographical_area_id": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"name": {
			"type": "string"
		},
		"type": {
			"type": "string"
		},
		"type_name": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"code",
		"country_id",
		"geographical_area_id",
		"id",
		"name"
	]
} 

export const CountrySchema = {
	"properties": {
		"code": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"name": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"code",
		"id",
		"name"
	]
} 

export const DashboardSchema = {
	"properties": {
		"code": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"name": {
			"type": "string"
		},
		"root_entity_code": {
			"type": "string"
		},
		"sort_order": {
			"type": "number"
		}
	},
	"type": "object",
	"required": [
		"code",
		"id",
		"name",
		"root_entity_code"
	]
} 

export const DashboardItemSchema = {
	"properties": {
		"code": {
			"type": "string"
		},
		"config": {},
		"id": {
			"type": "string"
		},
		"legacy": {
			"type": "boolean"
		},
		"report_code": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"code",
		"id"
	]
} 

export const DashboardRelationSchema = {
	"properties": {
		"child_id": {
			"type": "string"
		},
		"dashboard_id": {
			"type": "string"
		},
		"entity_types": {},
		"id": {
			"type": "string"
		},
		"permission_groups": {
			"type": "array",
			"items": {
				"type": "string"
			}
		},
		"project_codes": {
			"type": "array",
			"items": {
				"type": "string"
			}
		},
		"sort_order": {
			"type": "number"
		}
	},
	"type": "object",
	"required": [
		"child_id",
		"dashboard_id",
		"entity_types",
		"id",
		"permission_groups",
		"project_codes"
	]
} 

export const DataElementSchema = {
	"properties": {
		"code": {
			"type": "string"
		},
		"config": {},
		"id": {
			"type": "string"
		},
		"m_row$": {
			"type": "string"
		},
		"permission_groups": {
			"type": "array",
			"items": {
				"type": "string"
			}
		},
		"service_type": {
			"enum": [
				"data-lake",
				"dhis",
				"indicator",
				"kobo",
				"superset",
				"tupaia",
				"weather"
			],
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"code",
		"id",
		"service_type"
	]
} 

export const DataElementDataGroupSchema = {
	"properties": {
		"data_element_id": {
			"type": "string"
		},
		"data_group_id": {
			"type": "string"
		},
		"id": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"data_element_id",
		"data_group_id",
		"id"
	]
} 

export const DataElementDataServiceSchema = {
	"properties": {
		"country_code": {
			"type": "string"
		},
		"data_element_code": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"service_config": {},
		"service_type": {
			"enum": [
				"data-lake",
				"dhis",
				"indicator",
				"kobo",
				"superset",
				"tupaia",
				"weather"
			],
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"country_code",
		"data_element_code",
		"id",
		"service_type"
	]
} 

export const DataGroupSchema = {
	"properties": {
		"code": {
			"type": "string"
		},
		"config": {},
		"id": {
			"type": "string"
		},
		"service_type": {
			"enum": [
				"data-lake",
				"dhis",
				"indicator",
				"kobo",
				"superset",
				"tupaia",
				"weather"
			],
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"code",
		"id",
		"service_type"
	]
} 

export const DataServiceEntitySchema = {
	"properties": {
		"config": {},
		"entity_code": {
			"type": "string"
		},
		"id": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"config",
		"entity_code",
		"id"
	]
} 

export const DataServiceSyncGroupSchema = {
	"properties": {
		"code": {
			"type": "string"
		},
		"config": {},
		"data_group_code": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"service_type": {
			"enum": [
				"data-lake",
				"dhis",
				"indicator",
				"kobo",
				"superset",
				"tupaia",
				"weather"
			],
			"type": "string"
		},
		"sync_cursor": {
			"type": "string"
		},
		"sync_status": {
			"enum": [
				"ERROR",
				"IDLE",
				"SYNCING"
			],
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"code",
		"config",
		"data_group_code",
		"id",
		"service_type"
	]
} 

export const DataTableSchema = {
	"properties": {
		"code": {
			"type": "string"
		},
		"config": {},
		"description": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"permission_groups": {
			"type": "array",
			"items": {
				"type": "string"
			}
		},
		"type": {
			"enum": [
				"analytics",
				"data_element_metadata",
				"data_group_metadata",
				"entities",
				"entity_relations",
				"events",
				"sql"
			],
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"code",
		"id",
		"permission_groups",
		"type"
	]
} 

export const DhisInstanceSchema = {
	"properties": {
		"code": {
			"type": "string"
		},
		"config": {},
		"id": {
			"type": "string"
		},
		"readonly": {
			"type": "boolean"
		}
	},
	"type": "object",
	"required": [
		"code",
		"config",
		"id",
		"readonly"
	]
} 

export const DhisSyncLogSchema = {
	"properties": {
		"data": {
			"type": "string"
		},
		"deleted": {
			"type": "number"
		},
		"dhis_reference": {
			"type": "string"
		},
		"error_list": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"ignored": {
			"type": "number"
		},
		"imported": {
			"type": "number"
		},
		"record_id": {
			"type": "string"
		},
		"record_type": {
			"type": "string"
		},
		"updated": {
			"type": "number"
		}
	},
	"type": "object",
	"required": [
		"id",
		"record_id",
		"record_type"
	]
} 

export const DhisSyncQueueSchema = {
	"properties": {
		"bad_request_count": {
			"type": "number"
		},
		"change_time": {
			"type": "number"
		},
		"details": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"is_dead_letter": {
			"type": "boolean"
		},
		"is_deleted": {
			"type": "boolean"
		},
		"priority": {
			"type": "number"
		},
		"record_id": {
			"type": "string"
		},
		"record_type": {
			"type": "string"
		},
		"type": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"id",
		"record_id",
		"record_type",
		"type"
	]
} 

export const DisasterSchema = {
	"properties": {
		"countryCode": {
			"type": "string"
		},
		"description": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"name": {
			"type": "string"
		},
		"type": {
			"enum": [
				"cyclone",
				"earthquake",
				"eruption",
				"flood",
				"tsunami"
			],
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"countryCode",
		"id",
		"name",
		"type"
	]
} 

export const DisasterEventSchema = {
	"properties": {
		"date": {
			"type": "string",
			"format": "date-time"
		},
		"disasterId": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"organisationUnitCode": {
			"type": "string"
		},
		"type": {
			"enum": [
				"end",
				"resolve",
				"start"
			],
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"date",
		"disasterId",
		"id",
		"organisationUnitCode",
		"type"
	]
} 

export const EntitySchema = {
	"properties": {
		"attributes": {},
		"bounds": {},
		"code": {
			"type": "string"
		},
		"country_code": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"image_url": {
			"type": "string"
		},
		"m_row$": {
			"type": "string"
		},
		"metadata": {},
		"name": {
			"type": "string"
		},
		"parent_id": {
			"type": "string"
		},
		"point": {},
		"region": {},
		"type": {
			"enum": [
				"case",
				"case_contact",
				"catchment",
				"city",
				"country",
				"disaster",
				"district",
				"facility",
				"fetp_graduate",
				"field_station",
				"fiji_aspen_facility",
				"household",
				"incident",
				"incident_reported",
				"individual",
				"larval_habitat",
				"local_government",
				"medical_area",
				"nursing_zone",
				"postcode",
				"project",
				"school",
				"sub_catchment",
				"sub_district",
				"sub_facility",
				"village",
				"wish_sub_district",
				"world"
			],
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"code",
		"id",
		"name"
	]
} 

export const EntityHierarchySchema = {
	"properties": {
		"canonical_types": {
			"type": "array",
			"items": {
				"type": "string"
			}
		},
		"id": {
			"type": "string"
		},
		"name": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"id",
		"name"
	]
} 

export const EntityRelationSchema = {
	"properties": {
		"child_id": {
			"type": "string"
		},
		"entity_hierarchy_id": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"parent_id": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"child_id",
		"entity_hierarchy_id",
		"id",
		"parent_id"
	]
} 

export const ErrorLogSchema = {
	"properties": {
		"api_request_log_id": {
			"type": "string"
		},
		"error_time": {
			"type": "string",
			"format": "date-time"
		},
		"id": {
			"type": "string"
		},
		"message": {
			"type": "string"
		},
		"type": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"id"
	]
} 

export const ExternalDatabaseConnectionSchema = {
	"properties": {
		"code": {
			"type": "string"
		},
		"description": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"name": {
			"type": "string"
		},
		"permission_groups": {
			"type": "array",
			"items": {
				"type": "string"
			}
		}
	},
	"type": "object",
	"required": [
		"code",
		"id",
		"name"
	]
} 

export const FeedItemSchema = {
	"properties": {
		"country_id": {
			"type": "string"
		},
		"creation_date": {
			"type": "string",
			"format": "date-time"
		},
		"geographical_area_id": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"permission_group_id": {
			"type": "string"
		},
		"record_id": {
			"type": "string"
		},
		"template_variables": {
			"type": "object",
			"properties": {
				"constructor": {
					"$ref": "#/definitions/Function"
				}
			},
			"required": [
				"constructor"
			]
		},
		"type": {
			"type": "string"
		},
		"user_id": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"id"
	]
} 

export const GeographicalAreaSchema = {
	"properties": {
		"code": {
			"type": "string"
		},
		"country_id": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"level_code": {
			"type": "string"
		},
		"level_name": {
			"type": "string"
		},
		"name": {
			"type": "string"
		},
		"parent_id": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"country_id",
		"id",
		"level_code",
		"level_name",
		"name"
	]
} 

export const IndicatorSchema = {
	"properties": {
		"builder": {
			"type": "string"
		},
		"code": {
			"type": "string"
		},
		"config": {},
		"id": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"builder",
		"code",
		"id"
	]
} 

export const LegacyReportSchema = {
	"properties": {
		"code": {
			"type": "string"
		},
		"data_builder": {
			"type": "string"
		},
		"data_builder_config": {},
		"data_services": {},
		"id": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"code",
		"id"
	]
} 

export const LesmisSessionSchema = {
	"properties": {
		"access_policy": {},
		"access_token": {
			"type": "string"
		},
		"access_token_expiry": {
			"type": "string"
		},
		"email": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"refresh_token": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"access_policy",
		"access_token",
		"access_token_expiry",
		"email",
		"id",
		"refresh_token"
	]
} 

export const MapOverlaySchema = {
	"properties": {
		"code": {
			"type": "string"
		},
		"config": {},
		"country_codes": {
			"type": "array",
			"items": {
				"type": "string"
			}
		},
		"data_services": {},
		"id": {
			"type": "string"
		},
		"legacy": {
			"type": "boolean"
		},
		"linked_measures": {
			"type": "array",
			"items": {
				"type": "string"
			}
		},
		"name": {
			"type": "string"
		},
		"permission_group": {
			"type": "string"
		},
		"project_codes": {
			"type": "array",
			"items": {
				"type": "string"
			}
		},
		"report_code": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"code",
		"name",
		"permission_group"
	]
} 

export const MapOverlayGroupSchema = {
	"properties": {
		"code": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"name": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"code",
		"id",
		"name"
	]
} 

export const MapOverlayGroupRelationSchema = {
	"properties": {
		"child_id": {
			"type": "string"
		},
		"child_type": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"map_overlay_group_id": {
			"type": "string"
		},
		"sort_order": {
			"type": "number"
		}
	},
	"type": "object",
	"required": [
		"child_id",
		"child_type",
		"id",
		"map_overlay_group_id"
	]
} 

export const MeditrakDeviceSchema = {
	"properties": {
		"app_version": {
			"type": "string"
		},
		"config": {},
		"id": {
			"type": "string"
		},
		"install_id": {
			"type": "string"
		},
		"platform": {
			"type": "string"
		},
		"user_id": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"id",
		"install_id",
		"user_id"
	]
} 

export const MeditrakSyncQueueSchema = {
	"properties": {
		"change_time": {
			"type": "number"
		},
		"id": {
			"type": "string"
		},
		"record_id": {
			"type": "string"
		},
		"record_type": {
			"type": "string"
		},
		"type": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"id",
		"record_id",
		"record_type",
		"type"
	]
} 

export const Ms1SyncLogSchema = {
	"properties": {
		"count": {
			"type": "number"
		},
		"data": {
			"type": "string"
		},
		"endpoint": {
			"type": "string"
		},
		"error_list": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"record_id": {
			"type": "string"
		},
		"record_type": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"id",
		"record_id",
		"record_type"
	]
} 

export const Ms1SyncQueueSchema = {
	"properties": {
		"bad_request_count": {
			"type": "number"
		},
		"change_time": {
			"type": "number"
		},
		"details": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"is_dead_letter": {
			"type": "boolean"
		},
		"is_deleted": {
			"type": "boolean"
		},
		"priority": {
			"type": "number"
		},
		"record_id": {
			"type": "string"
		},
		"record_type": {
			"type": "string"
		},
		"type": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"id",
		"record_id",
		"record_type",
		"type"
	]
} 

export const OneTimeLoginSchema = {
	"properties": {
		"creation_date": {
			"type": "string",
			"format": "date-time"
		},
		"id": {
			"type": "string"
		},
		"token": {
			"type": "string"
		},
		"use_date": {
			"type": "string",
			"format": "date-time"
		},
		"user_id": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"id",
		"token",
		"user_id"
	]
} 

export const OptionSchema = {
	"properties": {
		"attributes": {},
		"id": {
			"type": "string"
		},
		"label": {
			"type": "string"
		},
		"option_set_id": {
			"type": "string"
		},
		"sort_order": {
			"type": "number"
		},
		"value": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"id",
		"option_set_id",
		"value"
	]
} 

export const OptionSetSchema = {
	"properties": {
		"id": {
			"type": "string"
		},
		"name": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"id",
		"name"
	]
} 

export const PermissionGroupSchema = {
	"properties": {
		"id": {
			"type": "string"
		},
		"name": {
			"type": "string"
		},
		"parent_id": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"id",
		"name"
	]
} 

export const PermissionsBasedMeditrakSyncQueueSchema = {
	"properties": {
		"change_time": {
			"type": "number"
		},
		"country_ids": {
			"type": "array",
			"items": {
				"type": "string"
			}
		},
		"entity_type": {
			"enum": [
				"case",
				"case_contact",
				"catchment",
				"city",
				"country",
				"disaster",
				"district",
				"facility",
				"fetp_graduate",
				"field_station",
				"fiji_aspen_facility",
				"household",
				"incident",
				"incident_reported",
				"individual",
				"larval_habitat",
				"local_government",
				"medical_area",
				"nursing_zone",
				"postcode",
				"project",
				"school",
				"sub_catchment",
				"sub_district",
				"sub_facility",
				"village",
				"wish_sub_district",
				"world"
			],
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"permission_groups": {
			"type": "array",
			"items": {
				"type": "string"
			}
		},
		"record_id": {
			"type": "string"
		},
		"record_type": {
			"type": "string"
		},
		"type": {
			"type": "string"
		}
	},
	"type": "object"
} 

export const ProjectSchema = {
	"properties": {
		"code": {
			"type": "string"
		},
		"config": {},
		"dashboard_group_name": {
			"type": "string"
		},
		"default_measure": {
			"type": "string"
		},
		"description": {
			"type": "string"
		},
		"entity_hierarchy_id": {
			"type": "string"
		},
		"entity_id": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"image_url": {
			"type": "string"
		},
		"logo_url": {
			"type": "string"
		},
		"permission_groups": {
			"type": "array",
			"items": {
				"type": "string"
			}
		},
		"sort_order": {
			"type": "number"
		}
	},
	"type": "object",
	"required": [
		"code",
		"id"
	]
} 

export const PsssSessionSchema = {
	"properties": {
		"access_policy": {},
		"access_token": {
			"type": "string"
		},
		"access_token_expiry": {
			"type": "string"
		},
		"email": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"refresh_token": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"access_policy",
		"access_token",
		"access_token_expiry",
		"email",
		"id",
		"refresh_token"
	]
} 

export const QuestionSchema = {
	"properties": {
		"code": {
			"type": "string"
		},
		"data_element_id": {
			"type": "string"
		},
		"detail": {
			"type": "string"
		},
		"hook": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"m_row$": {
			"type": "string"
		},
		"name": {
			"type": "string"
		},
		"option_set_id": {
			"type": "string"
		},
		"options": {
			"type": "array",
			"items": {
				"type": "string"
			}
		},
		"text": {
			"type": "string"
		},
		"type": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"id",
		"text",
		"type"
	]
} 

export const RefreshTokenSchema = {
	"properties": {
		"device": {
			"type": "string"
		},
		"expiry": {
			"type": "number"
		},
		"id": {
			"type": "string"
		},
		"meditrak_device_id": {
			"type": "string"
		},
		"token": {
			"type": "string"
		},
		"user_id": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"id",
		"token",
		"user_id"
	]
} 

export const ReportSchema = {
	"properties": {
		"code": {
			"type": "string"
		},
		"config": {
			"type": "object",
			"properties": {
				"fetch": {
					"type": "object",
					"properties": {
						"dataElements": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"dataGroups": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"aggregations": {
							"type": "array",
							"items": {
								"anyOf": [
									{
										"type": "object",
										"properties": {
											"type": {
												"type": "string"
											},
											"config": {
												"type": "object"
											}
										},
										"required": [
											"type"
										]
									},
									{
										"type": "string"
									}
								]
							}
						},
						"startDate": {
							"anyOf": [
								{
									"type": "object",
									"properties": {
										"unit": {
											"description": "Tupaia\nCopyright (c) 2017 - 2020 Beyond Essential Systems Pty Ltd",
											"enum": [
												"day",
												"month",
												"quarter",
												"week",
												"year"
											],
											"type": "string"
										},
										"offset": {
											"type": "number"
										},
										"modifier": {
											"enum": [
												"end_of",
												"start_of"
											],
											"type": "string"
										},
										"modifierUnit": {
											"description": "Tupaia\nCopyright (c) 2017 - 2020 Beyond Essential Systems Pty Ltd",
											"enum": [
												"day",
												"month",
												"quarter",
												"week",
												"year"
											],
											"type": "string"
										},
										"from": {
											"type": "string"
										}
									},
									"required": [
										"unit"
									]
								},
								{
									"type": "string"
								}
							]
						},
						"endDate": {
							"anyOf": [
								{
									"type": "object",
									"properties": {
										"unit": {
											"description": "Tupaia\nCopyright (c) 2017 - 2020 Beyond Essential Systems Pty Ltd",
											"enum": [
												"day",
												"month",
												"quarter",
												"week",
												"year"
											],
											"type": "string"
										},
										"offset": {
											"type": "number"
										},
										"modifier": {
											"enum": [
												"end_of",
												"start_of"
											],
											"type": "string"
										},
										"modifierUnit": {
											"description": "Tupaia\nCopyright (c) 2017 - 2020 Beyond Essential Systems Pty Ltd",
											"enum": [
												"day",
												"month",
												"quarter",
												"week",
												"year"
											],
											"type": "string"
										},
										"from": {
											"type": "string"
										}
									},
									"required": [
										"unit"
									]
								},
								{
									"type": "string"
								}
							]
						},
						"organisationUnits": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				},
				"transform": {
					"type": "array",
					"items": {
						"type": [
							"string",
							"object"
						]
					}
				},
				"output": {
					"type": "object"
				}
			},
			"required": [
				"fetch",
				"transform"
			]
		},
		"id": {
			"type": "string"
		},
		"permission_group_id": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"code",
		"config",
		"id",
		"permission_group_id"
	]
} 

export const SettingSchema = {
	"properties": {
		"id": {
			"type": "string"
		},
		"key": {
			"type": "string"
		},
		"value": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"id",
		"key"
	]
} 

export const SupersetInstanceSchema = {
	"properties": {
		"code": {
			"type": "string"
		},
		"config": {},
		"id": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"code",
		"config",
		"id"
	]
} 

export const SurveySchema = {
	"properties": {
		"can_repeat": {
			"type": "boolean"
		},
		"code": {
			"type": "string"
		},
		"country_ids": {
			"type": "array",
			"items": {
				"type": "string"
			}
		},
		"data_group_id": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"integration_metadata": {},
		"m_row$": {
			"type": "string"
		},
		"name": {
			"type": "string"
		},
		"period_granularity": {
			"enum": [
				"daily",
				"monthly",
				"quarterly",
				"weekly",
				"yearly"
			],
			"type": "string"
		},
		"permission_group_id": {
			"type": "string"
		},
		"requires_approval": {
			"type": "boolean"
		},
		"survey_group_id": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"code",
		"id",
		"name"
	]
} 

export const SurveyGroupSchema = {
	"properties": {
		"id": {
			"type": "string"
		},
		"name": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"id",
		"name"
	]
} 

export const SurveyResponseSchema = {
	"properties": {
		"approval_status": {
			"enum": [
				"approved",
				"not_required",
				"pending",
				"rejected"
			],
			"type": "string"
		},
		"assessor_name": {
			"type": "string"
		},
		"data_time": {
			"type": "string",
			"format": "date-time"
		},
		"end_time": {
			"type": "string",
			"format": "date-time"
		},
		"entity_id": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"m_row$": {
			"type": "string"
		},
		"metadata": {
			"type": "string"
		},
		"outdated": {
			"type": "boolean"
		},
		"start_time": {
			"type": "string",
			"format": "date-time"
		},
		"survey_id": {
			"type": "string"
		},
		"timezone": {
			"type": "string"
		},
		"user_id": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"assessor_name",
		"end_time",
		"entity_id",
		"id",
		"start_time",
		"survey_id",
		"user_id"
	]
} 

export const SurveyResponseCommentSchema = {
	"properties": {
		"comment_id": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"survey_response_id": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"comment_id",
		"id",
		"survey_response_id"
	]
} 

export const SurveyScreenSchema = {
	"properties": {
		"id": {
			"type": "string"
		},
		"screen_number": {
			"type": "number"
		},
		"survey_id": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"id",
		"screen_number",
		"survey_id"
	]
} 

export const SurveyScreenComponentSchema = {
	"properties": {
		"answers_enabling_follow_up": {
			"type": "array",
			"items": {
				"type": "string"
			}
		},
		"component_number": {
			"type": "number"
		},
		"config": {
			"type": "string"
		},
		"detail_label": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"is_follow_up": {
			"type": "boolean"
		},
		"question_id": {
			"type": "string"
		},
		"question_label": {
			"type": "string"
		},
		"screen_id": {
			"type": "string"
		},
		"validation_criteria": {
			"type": "string"
		},
		"visibility_criteria": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"component_number",
		"id",
		"question_id",
		"screen_id"
	]
} 

export const SyncGroupLogSchema = {
	"properties": {
		"id": {
			"type": "string"
		},
		"log_message": {
			"type": "string"
		},
		"service_type": {
			"enum": [
				"data-lake",
				"dhis",
				"indicator",
				"kobo",
				"superset",
				"tupaia",
				"weather"
			],
			"type": "string"
		},
		"sync_group_code": {
			"type": "string"
		},
		"timestamp": {
			"type": "string",
			"format": "date-time"
		}
	},
	"type": "object",
	"required": [
		"id",
		"log_message",
		"service_type",
		"sync_group_code"
	]
} 

export const UserAccountSchema = {
	"properties": {
		"creation_date": {
			"type": "string",
			"format": "date-time"
		},
		"email": {
			"type": "string"
		},
		"employer": {
			"type": "string"
		},
		"first_name": {
			"type": "string"
		},
		"gender": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"last_name": {
			"type": "string"
		},
		"mobile_number": {
			"type": "string"
		},
		"password_hash": {
			"type": "string"
		},
		"password_salt": {
			"type": "string"
		},
		"position": {
			"type": "string"
		},
		"primary_platform": {
			"enum": [
				"lesmis",
				"tupaia"
			],
			"type": "string"
		},
		"profile_image": {
			"type": "string"
		},
		"verified_email": {
			"enum": [
				"new_user",
				"unverified",
				"verified"
			],
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"email",
		"id",
		"password_hash",
		"password_salt"
	]
} 

export const UserEntityPermissionSchema = {
	"properties": {
		"entity_id": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"permission_group_id": {
			"type": "string"
		},
		"user_id": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"id"
	]
} 

export const UserFavouriteDashboardItemSchema = {
	"properties": {
		"dashboard_item_id": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"user_id": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"dashboard_item_id",
		"id",
		"user_id"
	]
} 

export const UserSessionSchema = {
	"properties": {
		"access_token_expiry": {
			"type": "string"
		},
		"accessPolicy": {},
		"accessToken": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"refreshToken": {
			"type": "string"
		},
		"userName": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"id",
		"refreshToken",
		"userName"
	]
} 

export const VerifiedEmailSchema = {
	"enum": [
		"new_user",
		"unverified",
		"verified"
	],
	"type": "string"
} 

export const SyncGroupSyncStatusSchema = {
	"enum": [
		"ERROR",
		"IDLE",
		"SYNCING"
	],
	"type": "string"
} 

export const ServiceTypeSchema = {
	"enum": [
		"data-lake",
		"dhis",
		"indicator",
		"kobo",
		"superset",
		"tupaia",
		"weather"
	],
	"type": "string"
} 

export const PrimaryPlatformSchema = {
	"enum": [
		"lesmis",
		"tupaia"
	],
	"type": "string"
} 

export const PeriodGranularitySchema = {
	"enum": [
		"daily",
		"monthly",
		"quarterly",
		"weekly",
		"yearly"
	],
	"type": "string"
} 

export const EntityTypeSchema = {
	"enum": [
		"case",
		"case_contact",
		"catchment",
		"city",
		"country",
		"disaster",
		"district",
		"facility",
		"fetp_graduate",
		"field_station",
		"fiji_aspen_facility",
		"household",
		"incident",
		"incident_reported",
		"individual",
		"larval_habitat",
		"local_government",
		"medical_area",
		"nursing_zone",
		"postcode",
		"project",
		"school",
		"sub_catchment",
		"sub_district",
		"sub_facility",
		"village",
		"wish_sub_district",
		"world"
	],
	"type": "string"
} 

export const DisasterTypeSchema = {
	"enum": [
		"cyclone",
		"earthquake",
		"eruption",
		"flood",
		"tsunami"
	],
	"type": "string"
} 

export const DisasterEventTypeSchema = {
	"enum": [
		"end",
		"resolve",
		"start"
	],
	"type": "string"
} 

export const DataTableTypeSchema = {
	"enum": [
		"analytics",
		"data_element_metadata",
		"data_group_metadata",
		"entities",
		"entity_relations",
		"events",
		"sql"
	],
	"type": "string"
} 

export const DataSourceTypeSchema = {
	"enum": [
		"dataElement",
		"dataGroup"
	],
	"type": "string"
} 

export const ApprovalStatusSchema = {
	"enum": [
		"approved",
		"not_required",
		"pending",
		"rejected"
	],
	"type": "string"
} 

export const IdSchema = {
	"type": "string"
} 

export const AnswerTypeSchema = {
	"properties": {
		"id": {
			"type": "string"
		},
		"type": {
			"type": "string"
		},
		"body": {
			"type": "string"
		},
		"question_id": {
			"$async": true,
			"checkIdExists": {
				"table": "question"
			},
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"body",
		"id",
		"question_id",
		"type"
	],
	"$async": true
} 

export const EntityCreatedSchema = {
	"properties": {
		"id": {
			"type": "string"
		},
		"code": {
			"type": "string"
		},
		"parent_id": {
			"type": "string"
		},
		"name": {
			"type": "string"
		},
		"type": {
			"enum": [
				"case",
				"case_contact",
				"catchment",
				"city",
				"country",
				"disaster",
				"district",
				"facility",
				"fetp_graduate",
				"field_station",
				"fiji_aspen_facility",
				"household",
				"incident",
				"incident_reported",
				"individual",
				"larval_habitat",
				"local_government",
				"medical_area",
				"nursing_zone",
				"postcode",
				"project",
				"school",
				"sub_catchment",
				"sub_district",
				"sub_facility",
				"village",
				"wish_sub_district",
				"world"
			],
			"type": "string"
		},
		"country_code": {
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"code",
		"country_code",
		"id",
		"name",
		"parent_id",
		"type"
	]
} 

export const OptionCreatedSchema = {
	"properties": {
		"id": {
			"type": "string"
		},
		"value": {
			"type": "number"
		},
		"option_set_id": {
			"$async": true,
			"checkIdExists": {
				"table": "optionSet"
			},
			"type": "string"
		},
		"sort_order": {
			"type": "number"
		}
	},
	"type": "object",
	"required": [
		"id",
		"option_set_id",
		"sort_order",
		"value"
	],
	"$async": true
} 

export const MeditrakSurveyResponseRequestSchema = {
	"properties": {
		"id": {
			"type": "string"
		},
		"timestamp": {
			"format": "iso-date-time",
			"type": "string"
		},
		"survey_id": {
			"type": "string"
		},
		"user_id": {
			"type": "string"
		},
		"answers": {
			"$async": true,
			"type": "array",
			"items": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"body": {
						"type": "string"
					},
					"question_id": {
						"checkIdExists": {
							"table": "question"
						},
						"type": "string"
					}
				},
				"required": [
					"body",
					"id",
					"question_id",
					"type"
				]
			}
		},
		"clinic_id": {
			"type": "string"
		},
		"entity_id": {
			"type": "string"
		},
		"start_time": {
			"format": "iso-date-time",
			"type": "string"
		},
		"end_time": {
			"format": "iso-date-time",
			"type": "string"
		},
		"data_time": {
			"format": "iso-date-time",
			"type": "string"
		},
		"approval_status": {
			"type": "string"
		},
		"entities_created": {
			"type": "array",
			"items": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"parent_id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"type": {
						"enum": [
							"case",
							"case_contact",
							"catchment",
							"city",
							"country",
							"disaster",
							"district",
							"facility",
							"fetp_graduate",
							"field_station",
							"fiji_aspen_facility",
							"household",
							"incident",
							"incident_reported",
							"individual",
							"larval_habitat",
							"local_government",
							"medical_area",
							"nursing_zone",
							"postcode",
							"project",
							"school",
							"sub_catchment",
							"sub_district",
							"sub_facility",
							"village",
							"wish_sub_district",
							"world"
						],
						"type": "string"
					},
					"country_code": {
						"type": "string"
					}
				},
				"required": [
					"code",
					"country_code",
					"id",
					"name",
					"parent_id",
					"type"
				]
			}
		},
		"options_created": {
			"$async": true,
			"type": "array",
			"items": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"value": {
						"type": "number"
					},
					"option_set_id": {
						"checkIdExists": {
							"table": "optionSet"
						},
						"type": "string"
					},
					"sort_order": {
						"type": "number"
					}
				},
				"required": [
					"id",
					"option_set_id",
					"sort_order",
					"value"
				]
			}
		},
		"submission_time": {
			"description": "only used in meditrak-app-server, v1.7.87 to v1.9.110 (inclusive) uses submission_time",
			"type": "string"
		},
		"timezone": {
			"type": "string"
		}
	},
	"type": "object",
	"additionalProperties": {},
	"required": [
		"answers",
		"id",
		"survey_id",
		"timestamp",
		"user_id"
	],
	"$async": true
} 

export const DataTablePreviewRequestSchema = {
	"properties": {
		"runtimeParameters": {
			"type": "object"
		},
		"code": {
			"type": "string"
		},
		"config": {},
		"description": {
			"type": "string"
		},
		"id": {
			"type": "string"
		},
		"permission_groups": {
			"type": "array",
			"items": {
				"type": "string"
			}
		},
		"type": {
			"enum": [
				"analytics",
				"data_element_metadata",
				"data_group_metadata",
				"entities",
				"entity_relations",
				"events",
				"sql"
			],
			"type": "string"
		}
	},
	"type": "object",
	"required": [
		"code",
		"id",
		"permission_groups",
		"runtimeParameters",
		"type"
	]
} 

