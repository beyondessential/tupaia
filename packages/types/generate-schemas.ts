import { resolve } from 'path';
import * as fs from 'fs';
import * as TJS from 'typescript-json-schema';

// @ts-ignore
import config from './config/schemas/config.json';

const customAsyncValidationKeys = ['checkIdExists'];

const settings: TJS.PartialArgs = {
  ref: false,
  required: true,
  ignoreErrors: true,
  validationKeywords: customAsyncValidationKeys,
  noExtraProps: true,
};

interface SchemaWithProperties {
  $async?: boolean;
  properties: { $async?: boolean; [key: string]: any };
}

const addAsyncKey = (schema: TJS.Definition) => {
  const { properties } = schema;

  if (properties) {
    const schemaWithAsyncKey: SchemaWithProperties = { properties: {}, ...schema };

    for (const [propertyKey, value] of Object.entries(properties)) {
      if (typeof value === 'object') {
        for (const asyncKey of customAsyncValidationKeys) {
          if (JSON.stringify(value).includes(asyncKey)) {
            // https://ajv.js.org/guide/async-validation.html
            schemaWithAsyncKey.properties[propertyKey] = { $async: true, ...value };
            schemaWithAsyncKey.$async = true;
            break;
          }
        }
      }
    }
    return schemaWithAsyncKey;
  }

  return schema;
};

const HEADER = `/*
 * Tupaia
 * Copyright (c) 2017 - 2020 Beyond Essential Systems Pty Ltd
 *
 */

/* 
 * This file was generated by a tool.
 * Rerun generate:schemas to regenerate this file.
 */
`;

const { filename, typesPath } = config as any;

const program = TJS.getProgramFromFiles([resolve(typesPath)]);
const schemas = TJS.generateSchema(program, '*', settings);

if (schemas?.definitions) {
  fs.writeFileSync(filename, HEADER);
  console.log(`Created file: ${filename}`);

  Object.entries(schemas.definitions || {}).forEach(([typeName, schema]) => {
    if (typeof schema !== 'boolean') {
      const finalisedSchema = `export const ${typeName}Schema = ${JSON.stringify(
        addAsyncKey(schema),
        null,
        '\t',
      )} \n\n`;
      fs.appendFileSync(filename, finalisedSchema);
      console.log(`Added schema: ${typeName}`);
    }
  });
}
