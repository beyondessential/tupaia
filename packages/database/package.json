{
  "name": "@tupaia/database",
  "private": true,
  "version": "1.0.0",
  "main": "dist/index.js",
  "scripts": {
    "build": "babel src --out-dir dist --source-maps --ignore '**/migrations','src/tests/**' --config-file '../../babel.config.json'",
    "build:ts": "tsc",
    "test": "mocha",
    "test:coverage": "cross-env NODE_ENV=test nyc mocha",
    "lint": "eslint --ignore-path ../../.gitignore .",
    "lint:fix": "yarn lint --fix .",
    "migrate": "babel-node ./src/migrate.js up --migrations-dir ./src/migrations -v --config-file '../../babel.config.json'",
    "migrate-down": "babel-node ./src/migrate.js  down --migrations-dir ./src/migrations -v --config-file '../../babel.config.json'",
    "migrate-create": "read -p \"Enter migration name: \" MIGRATION_NAME && read -p \"Enter the scope of this migration ('schema' or 'data'): \" MIGRATION_SCOPE && babel-node ./src/migrate.js create ${MIGRATION_NAME}-modifies-${MIGRATION_SCOPE} --migrations-dir ./src/migrations -v --config-file '../../babel.config.json'",
    "update-test-data": ". .env && pg_dump -s -O $DB_NAME > src/tests/testData/testDataDump.sql && pg_dump -t migrations -c -O $DB_NAME >> src/tests/testData/testDataDump.sql"
  },
  "dependencies": {
    "@tupaia/auth": "1.0.0",
    "@tupaia/utils": "1.0.0",
    "db-migrate": "^0.11.5",
    "db-migrate-pg": "^0.4.0",
    "dotenv": "^8.2.0",
    "knex": "0.14.6",
    "moment": "^2.24.0",
    "os": "0.1.1",
    "pg": "7.10.0",
    "pg-pubsub": "0.3.0",
    "rand-token": "^1.0.1",
    "react-autobind": "1.0.6",
    "winston": "3.3.3"
  }
}
