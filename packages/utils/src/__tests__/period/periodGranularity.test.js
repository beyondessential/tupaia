import { getDateRangeForGranularity } from '../../period/periodGranularity';

describe('getDateRangeForGranularity', () => {
  const testData = [
    ['yearly', '2020-01-01 00:00:00', ['2020-01-01 00:00:00', '2020-12-31 23:59:59']],
    ['yearly', '2020-12-31 23:59:59', ['2020-01-01 00:00:00', '2020-12-31 23:59:59']],
    ['yearly', '2017-02-28 12:13:14', ['2017-01-01 00:00:00', '2017-12-31 23:59:59']],

    ['quarterly', '2020-01-01 00:00:00', ['2020-01-01 00:00:00', '2020-03-31 23:59:59']],
    ['quarterly', '2020-01-31 23:59:59', ['2020-01-01 00:00:00', '2020-03-31 23:59:59']],
    ['quarterly', '2020-02-15 12:13:14', ['2020-01-01 00:00:00', '2020-03-31 23:59:59']],

    ['monthly', '2020-01-01 00:00:00', ['2020-01-01 00:00:00', '2020-01-31 23:59:59']],
    ['monthly', '2020-01-31 23:59:59', ['2020-01-01 00:00:00', '2020-01-31 23:59:59']],
    ['monthly', '2020-02-15 12:13:14', ['2020-02-01 00:00:00', '2020-02-29 23:59:59']],

    ['weekly', '2019-12-30 00:00:00', ['2019-12-30 00:00:00', '2020-01-05 23:59:59']],
    ['weekly', '2020-01-05 23:59:59', ['2019-12-30 00:00:00', '2020-01-05 23:59:59']],
    ['weekly', '2020-01-03 12:13:14', ['2019-12-30 00:00:00', '2020-01-05 23:59:59']],

    ['daily', '2020-01-01 00:00:00', ['2020-01-01 00:00:00', '2020-01-01 23:59:59']],
    ['daily', '2020-01-01 23:59:59', ['2020-01-01 00:00:00', '2020-01-01 23:59:59']],
    ['daily', '2020-01-01 12:13:14', ['2020-01-01 00:00:00', '2020-01-01 23:59:59']],
  ];

  it.each(testData)('%s - %s', (periodGranularity, datetime, [startDate, endDate]) => {
    const received = getDateRangeForGranularity(datetime, periodGranularity);
    expect(received).toStrictEqual({ startDate, endDate });
  });
});
