name: CI
on:
  push:
    branches-ignore:
      - '**-e2e'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

env:
  NODE_OPTIONS: '--max-old-space-size=6144'
  NODE_ENV: test

jobs:

  run_tests:
    name: Run tests
    runs-on: ubuntu-latest
    env:
      # common
      DB_NAME: tupaia_test
      DB_PASSWORD: opensesame1
      DB_URL: localhost
      DB_USER: tupaia
      AGGREGATION_URL_PREFIX: dev-

      # test database
      DB_PG_USER: postgres
      DB_PG_PASSWORD: opensesame2
      DB_MV_USER: mvrefresh
      DB_MV_PASSWORD: opensesame3

      # test data-lake-api
      DATA_LAKE_DB_NAME: data_lake_test
      DATA_LAKE_DB_PASSWORD: opensesame4
      DATA_LAKE_DB_URL: localhost
      DATA_LAKE_DB_USER: tupaia

      # central-server
      API_CLIENT_SALT: abc132
      CLIENT_SECRET: abc132
      CLIENT_USERNAME: meditrak_client_test
      JWT_SECRET: abc132

    strategy:
      fail-fast: false
      matrix:
        package:
          - central-server

    services:
      postgres:
        image: postgis/postgis:13-3.2-alpine
        env:
          POSTGRES_PASSWORD: opensesame2
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 14.19.3
          cache: yarn
      - run: yarn set version 3.2.1
      - run: SKIP_BUILD_INTERNAL_DEPENDENCIES=true yarn install
      - run: yarn build:internal-dependencies
      - run: yarn workspace @tupaia/${{ matrix.package }} setup-test || echo "No setup needed"
      - run: yarn workspace @tupaia/${{ matrix.package }} test