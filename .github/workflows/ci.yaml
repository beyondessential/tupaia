name: CI
on:
  push:
    branches-ignore:
      - '**-e2e'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

env:
  NODE_OPTIONS: '--max-old-space-size=6144'
  NODE_ENV: test

jobs:
  validate_branch_name:
    name: Validate branch name
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Validate branch name
        run: packages/devops/scripts/ci/validateBranchName.sh

  validate_migration:
    name: Validate new migrations
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Validate new migration
        run: packages/devops/scripts/ci/validateNewMigrations.sh

  validate_tests:
    name: Validate tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: yarn
      - run: corepack enable yarn
      - run: yarn install
      - run: yarn workspace @tupaia/utils build # /scripts/node/validateTests.js uses utils package
      - name: Validate unit tests
        run: packages/devops/scripts/ci/validateTests.sh

  validate_types:
    name: Validate types
    runs-on: ubuntu-latest
    env:
      DB_NAME: tupaia_test
      DB_PASSWORD: opensesame1
      DB_URL: localhost
      DB_USER: tupaia
      DB_PG_USER: postgres
      DB_PG_PASSWORD: opensesame2
      DB_MV_USER: mvrefresh
      DB_MV_PASSWORD: opensesame3
    services:
      postgres:
        image: postgis/postgis:13-3.2-alpine
        env:
          POSTGRES_PASSWORD: opensesame2
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: yarn
      - run: corepack enable yarn
      - name: Install dependencies
        run: yarn workspaces focus tupaia @tupaia/database @tupaia/types
      - run: yarn run build:from '{database,types}'
      - run: ./packages/devops/scripts/ci/validateTypesAndDbSchemaInSync.sh

  validate_lockfile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: yarn
      - run: corepack enable yarn
      - run: yarn install --immutable

  package_list:
    name: Generate package list
    runs-on: ubuntu-latest
    outputs:
      PACKAGES: ${{ steps.set-matrix.outputs.PACKAGES }}
    steps:
      - uses: actions/checkout@v3
      - id: set-matrix
        run: |
          echo PACKAGES=$(
            yarn workspaces list --json |
              jq --compact-output --raw-output --slurp \
                '[.[] | .name] | map(select(. != "tupaia" and . != "@tupaia/devops" and . != "@tupaia/e2e"))'
          ) >>"$GITHUB_OUTPUT"

  build:
    name: Build
    needs: package_list
    runs-on: ubuntu-latest
    env:
      CI: false # react-scripts build treats warnings as errors if this is true
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJSON(needs.package_list.outputs.PACKAGES) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: yarn
      - run: corepack enable yarn
      - run: yarn install # TODO: Resolve dependency issues and replace with `yarn workspaces focus`
      - run: yarn workspaces foreach -Rptv --jobs unlimited --from ${{ matrix.package }} run build

  run_tests:
    name: Run tests
    needs: package_list
    timeout-minutes: 15 # Sometimes Jest doesnâ€™t exit properly for meditrak-app-server tests
    runs-on: ubuntu-latest
    env:
      # common
      DB_NAME: tupaia_test
      DB_PASSWORD: opensesame1
      DB_URL: localhost
      DB_USER: tupaia
      AGGREGATION_URL_PREFIX: dev-
      API_CLIENT_NAME: api-client
      API_CLIENT_PASSWORD: api-client
      API_CLIENT_SALT: abc132
      JWT_SECRET: abc132
      TUPAIA_ADMIN_EMAIL_ADDRESS: test@tupaia.org
      TUPAIA_FRONT_END_URL: dev.tupaia.org
      LESMIS_FRONT_END_URL: dev-lesmis.tupaia.org
      DATATRAK_FRONT_END_URL: dev-datatrak.tupaia.org

      # test database
      DB_PG_USER: postgres
      DB_PG_PASSWORD: opensesame2
      DB_MV_USER: mvrefresh
      DB_MV_PASSWORD: opensesame3

      # test data-lake-api
      DATA_LAKE_DB_NAME: data_lake_test
      DATA_LAKE_DB_PASSWORD: opensesame4
      DATA_LAKE_DB_URL: localhost
      DATA_LAKE_DB_USER: tupaia

      # viz-test-tool
      SLACK_BOT_OAUTH_TOKEN: cat1234

      # Disable zendesk notifications in tests
      ZENDESK_NOTIFICATIONS_DISABLED: 'true'

    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJSON(needs.package_list.outputs.PACKAGES) }}

    services:
      postgres:
        image: postgis/postgis:13-3.2-alpine
        env:
          POSTGRES_PASSWORD: opensesame2
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: yarn
      - run: corepack enable yarn
      - run: yarn install
      - name: Build subtree
        run: yarn workspaces foreach -Rptv --jobs unlimited --from ${{ matrix.package }} run build
      - name: Run `setup-test` (if script exists)
        run: yarn workspaces foreach --include @tupaia/${{ matrix.package }} setup-test
      - name: Run `test` (if script exists)
        run: yarn workspaces foreach --include ${{ matrix.package }} run test

  allgreen:
    name: All Green
    if: always()
    needs:
      - validate_branch_name
      - validate_lockfile
      - validate_migration
      - validate_tests
      - validate_types
      - run_tests
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Green if all jobs are green
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
